CC=g++
ANTLR_SEARCH_PATHS=-I grammar/antlr/include -I grammar/antlr/libantlr3c
LEXER_SEARCH_PATH=-I grammar/output
HEADER_SEARCH_PATHS=-I src $(LEXER_SEARCH_PATH) $(ANTLR_SEARCH_PATHS)
CPP_FILES := $(wildcard src/*.cpp)
OBJ_FILES := $(addprefix obj/,$(notdir $(CPP_FILES:.cpp=.o)))
H_FILES = $(wildcard src/*.h)
LIBANTLR = grammar/antlr/libantlr3c/.libs/libantlr3c.a
OBJECTS = ${CPP_FILES:.cpp=.o}
CCFLAGS = -std=c++0x -O3


all:  compile

obj/main.o: src/main.cpp obj/MAliceLexer.o obj/MAliceParser.o
	$(CC) $(CCFLAGS) $(HEADER_SEARCH_PATHS) -c $< -o $@ 
	
obj/%.o: src/%.cpp src/%.h obj/MAliceLexer.o obj/MAliceParser.o
	$(CC) $(CCFLAGS) $(HEADER_SEARCH_PATHS) -c $< -o $@ 

compile: obj/MAliceLexer.o obj/MAliceParser.o $(OBJ_FILES) 
	$(CC) $(CCFLAGS) $(OBJ_FILES) obj/MAliceLexer.o obj/MAliceParser.o grammar/antlr/libantlr3c/.libs/libantlr3c.a -o $@

# Building the lexer and parser generated by ANTLR
$(LIBANTLR):
	sh ./configureantlr.sh

obj/MAliceLexer.o: $(LIBANTLR) grammar/output/MAliceLexer.h grammar/output/MAliceLexer.c
	$(CC) $(CCFLAGS) $(HEADER_SEARCH_PATHS) -c grammar/output/MAliceLexer.c -o obj/MAliceLexer.o

obj/MAliceParser.o: $(LIBANTLR) grammar/output/MAliceParser.h grammar/output/MAliceParser.c
	$(CC) $(CCFLAGS) $(HEADER_SEARCH_PATHS) -c grammar/output/MAliceParser.c -o obj/MAliceParser.o



clean:
	@sh ./cleanantlr.sh
	rm obj/*.o
.PHONY: clean
