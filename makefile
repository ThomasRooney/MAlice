CC=g++
CCFLAGS = -std=c++0x -O3

ANTLR_SEARCH_PATHS=-I grammar/antlr/include -I grammar/antlr/libantlr3c
LEXER_SEARCH_PATH=-I grammar/output
HEADER_SEARCH_PATHS=-I src $(LEXER_SEARCH_PATH) $(ANTLR_SEARCH_PATHS)
CPP_FILES := $(wildcard src/*.cpp)
OBJ_FILES := $(addprefix obj/,$(notdir $(CPP_FILES:.cpp=.o)))
H_FILES = $(wildcard src/*.h)
LIBANTLR = grammar/antlr/libantlr3c/.libs/libantlr3c.a
OBJECTS = ${CPP_FILES:.cpp=.o}
OBJ_DIR = obj
GRAMMAR_OUT_DIR = grammar/output
SRC_DIR = src

# For LLVM - adapted from http://stackoverflow.com/a/8440972
LLVM_MODULES = core
LLVM_CPPFLAGS = `llvm-config --cppflags` 
LLVM_LDFLAGS = `llvm-config --ldflags`
LLVM_LIBS = `llvm-config --libs $(LLVM_MODULES)`

all:  compile

obj/main.o: $(SRC_DIR)/main.cpp $(OBJ_DIR)/MAliceLexer.o $(OBJ_DIR)/MAliceParser.o
	$(CC) $(CCFLAGS) $(HEADER_SEARCH_PATHS) -c $< -o $@ 
	
obj/%.o: $(SRC_DIR)/%.cpp $(SRC_DIR)/%.h $(OBJ_DIR)/MAliceLexer.o $(OBJ_DIR)/MAliceParser.o
	$(CC) $(CCFLAGS) $(HEADER_SEARCH_PATHS) -c $(LLVM_CPPFLAGS) $< -o $@ 

compile: $(OBJ_DIR)/MAliceLexer.o $(OBJ_DIR)/MAliceParser.o $(OBJ_FILES) 
	$(CC) $(CCFLAGS) $(OBJ_FILES) $(OBJ_DIR)/MAliceLexer.o obj/MAliceParser.o $(LIBANTLR) $(LLVM_LDFLAGS) $(LLVM_LIBS) -o $@

# Building the lexer and parser generated by ANTLR
$(LIBANTLR):
	sh ./configureantlr.sh

obj/MAliceLexer.o: $(LIBANTLR) $(GRAMMAR_OUT_DIR)/MAliceLexer.h $(GRAMMAR_OUT_DIR)/MAliceLexer.c
	$(CC) $(CCFLAGS) $(HEADER_SEARCH_PATHS) -c $(GRAMMAR_OUT_DIR)/MAliceLexer.c -o $(OBJ_DIR)/MAliceLexer.o

obj/MAliceParser.o: $(LIBANTLR) $(GRAMMAR_OUT_DIR)/MAliceParser.h $(GRAMMAR_OUT_DIR)/MAliceParser.c
	$(CC) $(CCFLAGS) $(HEADER_SEARCH_PATHS) -c $(GRAMMAR_OUT_DIR)/MAliceParser.c -o $(OBJ_DIR)/MAliceParser.o



clean:
	@sh ./cleanantlr.sh
	rm obj/*.o
.PHONY: clean
